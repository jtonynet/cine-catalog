definitions:
  requests.Address:
    properties:
      country:
        example: BR
        type: string
      description:
        example: Giant Mall
        type: string
      name:
        example: Barrashopping
        type: string
      postalCode:
        example: "21940980"
        type: string
      state:
        example: RJ
        type: string
      telephone:
        example: 9999-9999
        type: string
      uuid:
        example: 2e61ddac-c3cc-46e9-ba88-0e86a790c924
        type: string
    required:
    - country
    - description
    - name
    - postalCode
    - state
    - telephone
    - uuid
    type: object
  requests.Cinema:
    properties:
      capacity:
        example: 120
        type: integer
      description:
        example: Good holographic Imax 5D room
        type: string
      name:
        example: Imax Majestic Room
        type: string
      uuid:
        example: 292cb98c-62ab-49ef-8e23-dc793a86061d
        type: string
    required:
    - capacity
    - description
    - name
    - uuid
    type: object
  requests.Movie:
    properties:
      age_rating:
        example: 12
        type: integer
      description:
        example: The best hero of all time
        type: string
      name:
        example: Spyder-Gopher
        type: string
      published:
        example: true
        type: boolean
      subtitled:
        example: true
        type: boolean
      uuid:
        example: 206dad85-cbcd-4b71-8fda-efd6ca87ebc7
        type: string
    required:
    - age_rating
    - description
    - name
    - published
    - subtitled
    - uuid
    type: object
  requests.UpdateAddress:
    properties:
      country:
        example: BR
        type: string
      description:
        example: Giant Mall
        type: string
      name:
        example: Barrashopping
        type: string
      postalCode:
        example: "21940980"
        type: string
      state:
        example: RJ
        type: string
      telephone:
        example: 9999-9999
        type: string
    type: object
  requests.UpdateCinema:
    properties:
      capacity:
        example: 160
        type: integer
      description:
        example: Majestic Very Good holographic Imax 5D room
        type: string
      name:
        example: 5D Imax Majestic Room
        type: string
    type: object
  requests.UpdateMovie:
    properties:
      age_rating:
        example: 12
        type: integer
      description:
        example: The best hero of all time AGAIN
        type: string
      name:
        example: Spyder-Gopher
        type: string
      published:
        example: true
        type: boolean
      subtitled:
        example: true
        type: boolean
    type: object
  responses.Address:
    properties:
      _links:
        $ref: '#/definitions/responses.HATEOASAddressLinks'
      _templates: {}
      country:
        type: string
      description:
        type: string
      name:
        type: string
      postalCode:
        type: string
      state:
        type: string
      telephone:
        type: string
      uuid:
        type: string
    type: object
  responses.Cinema:
    properties:
      _links: {}
      _templates: {}
      capacity:
        type: integer
      description:
        type: string
      name:
        type: string
      uuid:
        type: string
    type: object
  responses.HATEOASAddressLinks:
    properties:
      create-addresses-cinemas:
        $ref: '#/definitions/responses.HATEOASLink'
      retrieve-cinema-list:
        $ref: '#/definitions/responses.HATEOASLink'
      self:
        $ref: '#/definitions/responses.HATEOASLink'
      update-address:
        $ref: '#/definitions/responses.HATEOASLink'
    type: object
  responses.HATEOASLink:
    properties:
      href:
        type: string
    type: object
  responses.HATEOASListResult:
    properties:
      _embedded: {}
      _links: {}
      _templates: {}
    type: object
  responses.HATEOASMovieAndPostersList:
    properties:
      movies:
        items:
          $ref: '#/definitions/responses.MovieListItem'
        type: array
      posters:
        items:
          $ref: '#/definitions/responses.Poster'
        type: array
    type: object
  responses.HATEOASMovieLinks:
    properties:
      poster:
        $ref: '#/definitions/responses.HATEOASLink'
      self:
        $ref: '#/definitions/responses.HATEOASLink'
      update-movie:
        $ref: '#/definitions/responses.HATEOASLink'
      upload-movie-poster:
        $ref: '#/definitions/responses.HATEOASLink'
    type: object
  responses.HATEOASMovieListLinks:
    properties:
      create-movies:
        $ref: '#/definitions/responses.HATEOASLink'
      self:
        $ref: '#/definitions/responses.HATEOASLink'
    type: object
  responses.HATEOASMoviePosterList:
    properties:
      posters:
        items:
          $ref: '#/definitions/responses.Poster'
        type: array
    type: object
  responses.HATEOASPosterLinks:
    properties:
      image:
        $ref: '#/definitions/responses.HATEOASLink'
      movie:
        $ref: '#/definitions/responses.HATEOASLink'
      self:
        $ref: '#/definitions/responses.HATEOASLink'
      update-movie-poster:
        $ref: '#/definitions/responses.HATEOASLink'
    type: object
  responses.Movie:
    properties:
      _embedded:
        $ref: '#/definitions/responses.HATEOASMoviePosterList'
      _links:
        $ref: '#/definitions/responses.HATEOASMovieLinks'
      _templates: {}
      age_rating:
        type: integer
      description:
        type: string
      name:
        type: string
      posterLink:
        type: string
      published:
        type: boolean
      subtitled:
        type: boolean
      uuid:
        type: string
    type: object
  responses.MovieListItem:
    properties:
      _links:
        $ref: '#/definitions/responses.HATEOASMovieLinks'
      age_rating:
        type: integer
      description:
        type: string
      name:
        type: string
      posterLink:
        type: string
      published:
        type: boolean
      subtitled:
        type: boolean
      uuid:
        type: string
    type: object
  responses.MovieListResult:
    properties:
      _embedded:
        $ref: '#/definitions/responses.HATEOASMovieAndPostersList'
      _links:
        $ref: '#/definitions/responses.HATEOASMovieListLinks'
      _templates: {}
    type: object
  responses.Poster:
    properties:
      _links:
        $ref: '#/definitions/responses.HATEOASPosterLinks'
      _templates: {}
      alternativeText:
        type: string
      contentType:
        type: string
      name:
        type: string
      path:
        type: string
      uuid:
        type: string
    type: object
info:
  contact: {}
paths:
  /addresses:
    get:
      consumes:
      - application/json
      description: Retrieve List all Address
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.HATEOASListResult'
      summary: Retrieve Address List
      tags:
      - Addresses
    post:
      consumes:
      - application/json
      description: Create List of Addresses
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/requests.Address'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.HATEOASListResult'
      summary: Create Addresses
      tags:
      - Addresses
  /addresses/{address_id}:
    get:
      consumes:
      - application/json
      description: Retrieve one Address
      parameters:
      - description: UUID of the address
        in: path
        name: address_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Address'
      summary: Retrieve Address
      tags:
      - Addresses
    patch:
      consumes:
      - application/json
      description: Update Address
      parameters:
      - description: Address UUID
        in: path
        name: address_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Address'
      summary: Update Address
      tags:
      - Addresses
  /addresses/{address_id}/cinemas:
    get:
      description: Retrieve List all Cinemas from one Address
      parameters:
      - description: Address UUID
        in: path
        name: address_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MovieListResult'
      summary: Retrieve Cinema List
      tags:
      - Addresses Cinemas
    post:
      consumes:
      - application/json
      description: Create List of Cinemas
      parameters:
      - description: Address UUID
        in: path
        name: address_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/requests.Cinema'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.HATEOASListResult'
      summary: Create Addresses Cinemas
      tags:
      - Addresses Cinemas
  /cinemas/{cinema_id}:
    get:
      description: Retrieve one Cinema
      parameters:
      - description: Cinema UUID
        in: path
        name: cinema_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Cinema'
      summary: Retrieve Cinema
      tags:
      - Cinemas
    patch:
      consumes:
      - application/json
      description: Update Cinema
      parameters:
      - description: Cinema UUID
        in: path
        name: cinema_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCinema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Cinema'
      summary: Update Cinema
      tags:
      - Cinemas
  /movies:
    get:
      consumes:
      - application/json
      description: Retrieve List all Movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MovieListResult'
      summary: Retrieve Movie List
      tags:
      - Movies
    post:
      consumes:
      - application/json
      description: Create List of Movies
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/requests.Movie'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MovieListResult'
      summary: Create Movies
      tags:
      - Movies
  /movies/{movie_id}:
    get:
      consumes:
      - application/json
      description: Retrieve one Movie
      parameters:
      - description: UUID of the movie
        in: path
        name: movie_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Movie'
      summary: Retrieve Movie
      tags:
      - Movies
    patch:
      consumes:
      - application/json
      description: Update Movie
      parameters:
      - description: Movie UUID
        in: path
        name: movie_id
        required: true
        type: string
      - description: Request body for update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMovie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Movie'
      summary: Update Movie
      tags:
      - Movies
  /movies/{movie_id}/posters:
    post:
      consumes:
      - multipart/form-data
      description: Upload Movie Poster
      parameters:
      - description: Movie UUID
        in: path
        name: movie_id
        required: true
        type: string
      - example: good poster of spyder gopher
        in: formData
        name: alternativeText
        required: true
        type: string
      - example: Spyder-Gopher
        in: formData
        name: name
        required: true
        type: string
      - example: 2175d4e2-4d9c-411d-a986-08dc8f4e6a51
        in: formData
        name: uuid
        required: true
        type: string
      - description: binary poster data
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Poster'
      summary: Upload Movie Poster
      tags:
      - Movies Posters
  /movies/{movie_id}/posters/{poster_id}:
    get:
      consumes:
      - application/json
      description: Retrieve Movie Poster
      parameters:
      - description: Movie UUID
        in: path
        name: movie_id
        required: true
        type: string
      - description: Poster UUID
        in: path
        name: poster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Poster'
      summary: Retrieve Movie Poster
      tags:
      - Movies Posters
    patch:
      consumes:
      - multipart/form-data
      description: Update Movie Poster
      parameters:
      - description: Movie UUID
        in: path
        name: movie_id
        required: true
        type: string
      - description: Poster UUID
        in: path
        name: poster_id
        required: true
        type: string
      - example: good poster of spyder gopher AGAIN
        in: formData
        name: alternativeText
        type: string
      - example: Spyder-Gopher
        in: formData
        name: name
        type: string
      - description: binary poster data
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Poster'
      summary: Update Movie Poster
      tags:
      - Movies Posters
swagger: "2.0"
