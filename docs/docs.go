// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addresses": {
            "get": {
                "description": "Retrieve List all Address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Retrieve Address List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.HATEOASListResult"
                        }
                    }
                }
            },
            "post": {
                "description": "Create List of Addresses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Create Addresses",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/requests.Address"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.HATEOASListResult"
                        }
                    }
                }
            }
        },
        "/addresses/{address_id}": {
            "get": {
                "description": "Retrieve one Address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Retrieve Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the address",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Address"
                        }
                    }
                }
            }
        },
        "/addresses/{address_id}/cinemas": {
            "post": {
                "description": "Create List of Cinemas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Addresses"
                ],
                "summary": "Create Addresses Cinemas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address UUID",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/requests.Cinema"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.HATEOASListResult"
                        }
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "description": "Retrieve List all Movies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Retrieve Movie List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.MovieListResult"
                        }
                    }
                }
            },
            "post": {
                "description": "Create List of Movies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Create Movies",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/requests.Movie"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.MovieListResult"
                        }
                    }
                }
            }
        },
        "/movies/{movie_id}": {
            "get": {
                "description": "Retrieve one Movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Retrieve Movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of the movie",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Movie"
                        }
                    }
                }
            }
        },
        "/movies/{movie_id}/posters": {
            "post": {
                "description": "Upload Movie Poster",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Upload Movie Poster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie UUID",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "alternativeText",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "uuid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "binary poster data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Poster"
                        }
                    }
                }
            }
        },
        "/movies/{movie_id}/posters/{poster_id}": {
            "patch": {
                "description": "Update Movie Poster",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Update Movie Poster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie UUID",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Poster UUID",
                        "name": "poster_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "alternativeText",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "binary poster data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Poster"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.Address": {
            "type": "object",
            "required": [
                "country",
                "description",
                "name",
                "postalCode",
                "state",
                "telephone",
                "uuid"
            ],
            "properties": {
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "requests.Cinema": {
            "type": "object",
            "required": [
                "capacity",
                "description",
                "name",
                "uuid"
            ],
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "requests.Movie": {
            "type": "object",
            "required": [
                "age_rating",
                "description",
                "name",
                "subtitled",
                "uuid"
            ],
            "properties": {
                "age_rating": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subtitled": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "responses.Address": {
            "type": "object",
            "properties": {
                "_links": {},
                "_templates": {},
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "responses.HATEOASLink": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                }
            }
        },
        "responses.HATEOASListResult": {
            "type": "object",
            "properties": {
                "_embedded": {},
                "_links": {},
                "_templates": {}
            }
        },
        "responses.HATEOASMovieAndPostersList": {
            "type": "object",
            "properties": {
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.MovieListItem"
                    }
                },
                "posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Poster"
                    }
                }
            }
        },
        "responses.HATEOASMovieLinks": {
            "type": "object",
            "properties": {
                "self": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                },
                "update-movie": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                },
                "upload-movie-poster": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                }
            }
        },
        "responses.HATEOASMovieListLinks": {
            "type": "object",
            "properties": {
                "create-movies": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                },
                "self": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                }
            }
        },
        "responses.HATEOASMoviePosterList": {
            "type": "object",
            "properties": {
                "posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Poster"
                    }
                }
            }
        },
        "responses.HATEOASPosterLinks": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                },
                "movie": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                },
                "self": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                },
                "update-movie-poster": {
                    "$ref": "#/definitions/responses.HATEOASLink"
                }
            }
        },
        "responses.Movie": {
            "type": "object",
            "properties": {
                "_embedded": {
                    "$ref": "#/definitions/responses.HATEOASMoviePosterList"
                },
                "_links": {
                    "$ref": "#/definitions/responses.HATEOASMovieLinks"
                },
                "_templates": {},
                "age_rating": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "posterLink": {
                    "type": "string"
                },
                "subtitled": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "responses.MovieListItem": {
            "type": "object",
            "properties": {
                "_links": {
                    "$ref": "#/definitions/responses.HATEOASMovieLinks"
                },
                "age_rating": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "posterLink": {
                    "type": "string"
                },
                "subtitled": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "responses.MovieListResult": {
            "type": "object",
            "properties": {
                "_embedded": {
                    "$ref": "#/definitions/responses.HATEOASMovieAndPostersList"
                },
                "_links": {
                    "$ref": "#/definitions/responses.HATEOASMovieListLinks"
                },
                "_templates": {}
            }
        },
        "responses.Poster": {
            "type": "object",
            "properties": {
                "_links": {
                    "$ref": "#/definitions/responses.HATEOASPosterLinks"
                },
                "alternativeText": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
